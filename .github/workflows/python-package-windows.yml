# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package (Windows)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-2019
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest nbconvert jupyter pytest-cov
        if(Test-Path "requirements.txt")
        {
          pip install -r requirements.txt
        }
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest --cov=gdeep --cov-report=xml .
        ls
    - name: Get Coverage 
      uses: orgoro/coverage@v3
      with:
        coverageFile: coverage.xml
        token: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'pull_request'
      continue-on-error: true
    - name: Integration tests
      run: |
        set --exit
        foreach ($n in Get-ChildItem examples/*.ipynb)
        {
          jupyter nbconvert --to notebook --execute $n.fullname
        }
    - name: Build and install wheels
      run: |
        set --exit
        python -m pip install wheel
        python setup.py bdist_wheel
        foreach ($n in Get-ChildItem dist/*.whl)
        {
          python -m pip install $n.fullname
        }
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pip_wheel_win_${{ matrix.python-version }}
        path: dist
