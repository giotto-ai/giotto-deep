# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  pull_request_target:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
    permissions:
      actions: read
      checks: read
      contents: read
      deployments: read
      issues: read
      packages: read
      pull-requests: write
      repository-projects: read
      security-events: read
      statuses: read
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov nbconvert jupyter mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Type checking with mypy
      run: |
        mypy --ignore-missing-imports . || {
          status=$? echo "Type checking errors!"
        }
      continue-on-error: true
      timeout-minutes: 5
    - name: Test with pytest
      run: |
        pytest --cov=gdeep --cov-report=xml .
        ls
    - name: Get Coverage 
      uses: orgoro/coverage@v3
      with:
        coverageFile: ./coverage.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        thresholdAll: 0.7
      if: github.event_name == 'pull_request'
    - name: Integration tests
      run: |
        set -e
        for n in examples/*.ipynb
        do
          jupyter nbconvert --to notebook --execute $n
        done
    - name: Build and install wheels
      run: |
        set -e
        python -m pip install wheel
        python setup.py bdist_wheel
        python -m pip install dist/*.whl
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pip_wheel_${{ matrix.python-version }}
        path: dist
